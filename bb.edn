{:paths ["script"]
 :tasks
 {:requires ([babashka.fs :as fs]
             [clojure.string :as str]
             [compile :refer [compile-native-image]]
             [reflect-config :refer [generate-trace-files generate-reflect-config simplify-reflect-config]]
             [cheshire.core :as json])

  compile-clj (do
                (fs/create-dirs "classes")
                (clojure "-M -e" "(compile 'refl.main)"))

  classpath (str (str/trim (with-out-str (clojure "-Spath"))) ":classes")

  invocations [["refl.main" "string"]
               ["refl.main" "file"]]

  trace-files {:depends [classpath invocations]
               :task (do (fs/create-dirs "nativecfg")
                         (generate-trace-files classpath invocations))}

  gen-reflect-config {:depends [classpath invocations]
                      :task (do
                              (fs/create-dirs "nativecfg")
                              (generate-reflect-config classpath invocations)
                              )}

  simplify {:depends [gen-reflect-config trace-files]
            :task (do
                    (spit "nativecfg/reflect-config-cleaned.json"
                          (json/generate-string
                           (simplify-reflect-config "nativecfg/reflect-config.json" trace-files)
                           {:pretty true})) )}

  compile-native {:depends [simplify]
                  :task (compile-native-image classpath)}

  }}
